diff --git a/rtl/variable_latency_interconnect/addr_decoder.sv b/rtl/variable_latency_interconnect/addr_decoder.sv
index ef60d1e..0d6ad3e 100644
--- a/rtl/variable_latency_interconnect/addr_decoder.sv
+++ b/rtl/variable_latency_interconnect/addr_decoder.sv
@@ -23,12 +23,16 @@ module addr_decoder #(
   localparam int unsigned NumOutLog = NumOut == 1 ? 1 : $clog2(NumOut)
 ) (
   // Initiator side
+  /* verilator lint_off UNOPTFLAT */
   input  logic                             valid_i, // Request valid from this initiator
   input  logic [NumOutLog-1:0]             addr_i,  // Target selection index to be decoded
   input  logic [DataWidth-1:0]             data_i,  // Data to be transported to the targets
+  /* verilator lint_off UNOPTFLAT */
   output logic                             ready_o, // Ready to the initiator
   // Target side
+  /* verilator lint_off UNOPTFLAT */
   output logic [NumOut-1:0]                valid_o, // Request valid to this target
+  /* verilator lint_off UNOPTFLAT */
   input  logic [NumOut-1:0]                ready_i, // Targets ready to accept data
   output logic [NumOut-1:0][DataWidth-1:0] data_o
 );
diff --git a/rtl/variable_latency_interconnect/simplex_xbar.sv b/rtl/variable_latency_interconnect/simplex_xbar.sv
index 0e9f218..6578661 100644
--- a/rtl/variable_latency_interconnect/simplex_xbar.sv
+++ b/rtl/variable_latency_interconnect/simplex_xbar.sv
@@ -34,11 +34,13 @@ module simplex_xbar #(
   input  logic [NumIn-1:0]                 valid_i,    // Valid signal
   output logic [NumIn-1:0]                 ready_o,    // Ready signal
   input  logic [NumIn-1:0][NumOutLog-1:0]  tgt_addr_i, // Target address
+  /* verilator lint_off UNOPTFLAT */
   input  logic [NumIn-1:0][DataWidth-1:0]  data_i,     // Data
   // Target side
   output logic [NumOut-1:0]                valid_o,    // Valid signal
   input  logic [NumOut-1:0]                ready_i,    // Ready signal
   output logic [NumOut-1:0][NumInLog-1:0]  ini_addr_o, // Initiator address
+  /* verilator lint_off UNOPTFLAT */
   output logic [NumOut-1:0][DataWidth-1:0] data_o      // Data
 );
 
